//Define Hieraririchal inheritance:
/* HIERARCHICAL INHERITANCE: Hierarchical inheritance is the one of the basic types of inheritance where multiple child classes inherit the methods and properties of the same parent class:*/
public class Main {
    public static void main(String args[]){
        Vehicle a1=new Vehicle();                              //object creation for the super class:
        a1.vehicles("vehicle");                               //invoking the method of superclass through the object:
        Fourwheel a2 = new Fourwheel();                       //object creation for the subclass of the vehicle:
        a2.exOfFourwheel("CAR");                             //invoking the method of subclass through the object:
        Twowheel a3 = new Twowheel();                       //object creation for the subclass of the vehicle:
        a3.exOfTwowheel("BIKE");                           //invoking the method of subclass through the object
        MAHINDRA a4 = new MAHINDRA("MAHINDRA", 1945, 2500000, 8);       //invoking the constructor of the subclass of the Fourwheel:
        Hyundai a5= new Hyundai("HYUNDAI", 1996, 4500000, 10);   //invoking the constructor of the subclass of the Fourwheel:
        PULSAR a6=new PULSAR("PULSAR", 1994, 200000);              //invoking the constructor of the subclass of the Twowheel:
        RX150 a7 = new RX150("RX150", 1995, 300000);    //invoking the constructor of the subclass of the Twowheel:

    }
}
class Vehicle{    //creation of super_class
    
    void vehicles(String name){   //method of super class
        name="vehicles";
        System.out.println(name+" are costly:");
    }

}
class Fourwheel extends Vehicle{   //creation of subclass1:
    
    void exOfFourwheel(String name){  //method of subclass1: 
        
        System.out.println(name+" is high costly product:");

    }
}
class Twowheel extends Vehicle{   //creation of subclass2:

    void exOfTwowheel(String name){    //method of subclass2:
        
        System.out.println(name+" is low cost product:");

    }
}
class MAHINDRA extends Fourwheel{     //creation of subclass1 from the fourwheel subclass:
    String name;
    int year;
    int cost;
    int no_of_seat;
    MAHINDRA(String name,int year,int cost,int no_of_seat){       //creation of parameterized constructor:
        this.aboutMahindra(name, year, cost, no_of_seat);      //invoking the method by using this keyword into the constructor:
    }
    void aboutMahindra(String name,int year,int cost,int no_of_seat){    //creation of method for the subclass1 from the fourwheel subclass:
        System.out.println("-----------------MAHINDRA CAR------------------");
          System.out.println("the name of the car is: "+name);
          System.out.println("it was made in: "+year);
          System.out.println("the cost of the car is: "+cost);
          System.out.println("no_of_seats in the car: "+no_of_seat);
    }
}
class Hyundai extends Fourwheel{      //creation of subclass2 from the fourwheel subclass:
    String name; 
    int year;
    int cost;
    int no_of_seat;
    Hyundai(String name,int year,int cost,int no_of_seat){    //creation of parameterized constructor:
        this.aboutHundai(name, year, cost, no_of_seat);     //invoking the method by using this keyword into the constructor:
    }
    void aboutHundai(String name,int year,int cost,int no_of_seat){   //creation of method for the subclass2 from the fourwheel subclass:
        System.out.println("------------------HYUNDAI CAR------------------");
          System.out.println("the name of the car is: "+name);
          System.out.println("it was made in: "+year);
          System.out.println("the cost of the car is: "+cost);
          System.out.println("no_of_seats in the car: "+no_of_seat);
    }
}
class PULSAR extends Twowheel{     //creation of subclass1 from the Twowheel subclass:
    String name;
    int year;
    int cost;
    PULSAR(String name,int year,int cost){        //creation of parameterized constructor:
        this.aboutPULSAR(name, year, cost);        //invoking the method by using this keyword into the constructor:
    }
    void aboutPulsar(String name,int year,int cost){     //creation of method for the subclass1 from the twowheel subclass:
        System.out.println("------------------PULSAR BIKE------------------");
          System.out.println("the name of the car is: "+name);
          System.out.println("it was made in:"+year);
          System.out.println("the cost of the car is: "+cost);
        
    }
}
class RX150 extends Twowheel{    //creation of subclass2 from the Twowheel subclass:
    String name;
    int year;
    int cost;

    RX150(String name,int year,int cost){    //creation of parameterized constructor:
        this.aboutRX150(name, year, cost);   //  //invoking the method by using this keyword into the constructor:
    }
    void aboutRX150(String name,int year,int cost){   //creation of method for the subclass2 from the twowheel subclass:
          System.out.println("------------------RX150 BIKE------------------");
          System.out.println("the name of the car is: "+name);
          System.out.println("it was made in: "+year);
          System.out.println("the cost of the car is: "+cost);
          
    }
}
